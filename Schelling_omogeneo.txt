#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<math.h>
int main(){
	int n=50, agenti, i, j, m, a,b, c, cont1=0, cont2=0, cont3=0, cont4=0, h, d, f, e, g, vicini, temp, k, n_blocchi=25;
	int griglia[n][n], arrayi[8], arrayj[8], array1[n_blocchi], array2[n_blocchi];
	float tolleranza=0., max, risultati[n_blocchi], somma=0., media2, media1, rapporto[n*n];
	k=n/5;
	srand(time(NULL));
	agenti=n*n;
	while(tolleranza<1.1){
	//printf("la matrice inizialmente\n");
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			griglia[i][j]=(rand())%2+1;
			//printf("%d ", griglia[i][j]);
		}
		//printf("\n");
	}
	//printf("\n\n");
	/*for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			if(griglia[i][j]==1){
				cont1++;
			}
			if(griglia[i][j]==2){
				cont2++;
			}
		}
	}
	printf("all'inzizio ci sono %d bianchi e %d neri\n",cont1, cont2);*/
	
	for(m=0;m<1000;m++){
		for(i=0;i<n;i++){
			for(j=0;j<n;j++){
				cont1=0;
				cont2=0;
				for(h=0;h<8;h++){
					arrayi[h]=0;
					arrayj[h]=0;
				}
				if(i>0 && j>0 && j<n-1 && i<n-1){
					d=1;
					e=2;
					f=1;
					g=2;
					vicini=8;
				}
				if(i==0 && j>0 && j<n-1){
					d=0;
					e=2;
					f=1;
					g=2;
					vicini=5;
				}
				if(i==n-1 && j<n-1 && j>0){
					d=1;
					e=1;
					f=1;
					g=2;
					vicini=5;
				}
				if(i>0 && i<n-1 && j==0){
					d=1;
					e=2;
					f=0;
					g=2;
					vicini=5;
				}
				if (j==n-1 && i>0 && i<n-1){
					d=1;
					e=2;
					f=1;
					g=1;
					vicini=5;
				}
				if(i==0 && j==0){
					d=0;
					e=2;
					f=0;
					g=2;
					vicini=3;
				}
				if(i==n-1 && j==0){
					d=1;
					e=1;
					f=0;
					g=2;
					vicini=3;
				}
				if(i==0 && j==n-1){
					d=0;
					e=2;
					f=1;
					g=1;
					vicini=3;
				}
				if(i==n-1 && j==n-1){
					d=1;
					e=1;
					f=1;
					g=1;
					vicini=3;
				}
				max=(float)vicini*tolleranza;
				if (griglia[i][j]!=0){
					for(a=i-d;a<i+e;a++){
						for(b=j-f;b<j+g;b++){
							if(a==i && b==j){
								continue;
							}
							if(griglia[a][b]!=griglia[i][j]){
								cont1++;
								arrayi[cont1]=a;
								arrayj[cont1]=b;
							}
						}
					}
					if(cont1>max){
						c=rand()%cont1;
						temp=griglia[arrayi[c]][arrayj[c]];
						griglia[arrayi[c]][arrayj[c]]=griglia[i][j];
						griglia[i][j]=temp;
						cont3++;
					}
				}				
			}	
		}
	}
	
	/*cont1=0;
	cont2=0;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			if(griglia[i][j]==1){
				cont1++;
			}
			if(griglia[i][j]==2){
				cont2++;
			}
		}
	}
	printf("all'inzizio ci sono %d bianchi e %d nerin\n",cont1, cont2);*/
	
	/*printf("la matrice alla fine\n");
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			printf("%d ", griglia[i][j]);
		}
		printf("\n");
	}*/
	//printf("ci sono stati %d spostamenti", cont3);
/*	a=0;
	b=0;
	c=0;
	d=0;
	cont1=0;
	cont2=0;
	cont3=0;
	cont4=0;
	for(i=0;i<9;i++){
		array1[i]=0;
		array2[i]=0;
	}
	while(b<n){
		for(i=a;i<a+k;i++){
			for(j=b;j<b+k;j++){
				if(griglia[i][j]==1){
					cont2++;
					array1[cont1]=cont2;
				}
				if(griglia[i][j]==2){
					cont4++;
					array2[cont3]=cont4;
				}
			}
			if(i==(a+k)-1 && i<n){
				if(i!=n-1){
				a=a+k;
				}
				//array2[cont3]=cont4;
				//printf("%d\n", cont3);
				cont3++;
				cont4=0;
				cont2=0;
				cont1++;
				//printf("%d\n", b);
			}
		}
		//printf("%d\n", b);
		a=0;
		b=b+k;
	}
	/*printf("\n\n");
	for(i=0;i<9;i++){
		c=array1[i]+c;
		d=array2[i]+d;
		printf("%d ",array1[i]);
	}
	printf("\n");
	for(i=0;i<9;i++){
		printf("%d ",array2[i]);
	}*/
	//printf("\n%d\n",d+c);
	/*printf("\n\n");
	cont1=0;
	somma=0.;
	for(i=0;i<n_blocchi;i++){
		if(array1[i]>=array2[i]){
			risultati[i]=(float)array2[i]/array1[i];
		}
		if(array1[i]<array2[i]){
			risultati[i]=(float)array1[i]/array2[i];
		}
		//printf("%f ",risultati[i]);
		somma=risultati[i]+somma;
	}*/
	//media1=(float)somma/n_blocchi;
	printf("\n\n");
	cont2=0;
	somma=0.;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			cont1=0;
			if(i>0 && j>0 && j<n-1 && i<n-1){
				d=1;
				e=2;
				f=1;
				g=2;
				vicini=8;
			}
			if(i==0 && j>0 && j<n-1){
				d=0;
				e=2;
				f=1;
				g=2;
				vicini=5;
			}
			if(i==n-1 && j<n-1 && j>0){
				d=1;
				e=1;
				f=1;
				g=2;
				vicini=5;
			}
			if(i>0 && i<n-1 && j==0){
				d=1;
				e=2;
				f=0;
				g=2;
				vicini=5;
				}
			if (j==n-1 && i>0 && i<n-1){
				d=1;
				e=2;
				f=1;
				g=1;
				vicini=5;
			}
			if(i==0 && j==0){
				d=0;
				e=2;
				f=0;
				g=2;
				vicini=3;
				}
			if(i==n-1 && j==0){
				d=1;
				e=1;
				f=0;
				g=2;
				vicini=3;
			}
			if(i==0 && j==n-1){
				d=0;
				e=2;
				f=1;
				g=1;
				vicini=3;
			}
			if(i==n-1 && j==n-1){
				d=1;
				e=1;
				f=1;
				g=1;
				vicini=3;
			}
			for(a=i-d;a<i+e;a++){
				for(b=j-f;b<j+g;b++){
					if(a==i && b==j){
						continue;
						}
					if(griglia[a][b]==griglia[i][j]){
						cont1++;
					}
				}
			}
			rapporto[cont2]=(float)cont1/vicini;
			somma=somma+rapporto[cont2];
			//printf("%2.3f ", rapporto[cont2]);
			cont2++;
		}
		//printf("\n");
	}
	media2=(float)somma/(n*n);
	printf("media=%f\n", media2);
	FILE *ptr_file;
	ptr_file=fopen("dati2.txt", "a+");
	/*for(i=0;i<n_blocchi;i++){		
		fprintf(ptr_file,"%1.3f\t",risultati[i] );
	}*/
	if(tolleranza==0.){
		
		fprintf(ptr_file,"media2\n");
	}
	fprintf(ptr_file,"%f\n",media2);
	tolleranza=tolleranza+0.1;
	//printf("tol=%f", tolleranza);
	}











}

